// https://leetcode.com/problems/maximum-depth-of-binary-tree/ 
// Easy

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    Integer maxDepth = 0;
    public int maxDepth(TreeNode root) {
        int depth = 0;
        if (root == null)
        {
            return 0;
        }
        
        traverseWithDepth(root, depth);
        return maxDepth;
        
    }
    
    private void traverseWithDepth(TreeNode node, int depth)
    {
        if (node == null)
        {
            if (depth > maxDepth)
                maxDepth =  depth;
            return;
        }
        
        depth += 1;
        traverseWithDepth (node.left, depth);
        traverseWithDepth (node.right, depth);
    }
}
